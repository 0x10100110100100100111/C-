#include <iostream>
#include <conio>
//using namespace std;

#define MAX_CAP 9
typedef int Element;
typedef struct StackRecord {
	int tos;
	Element stack_array[MAX_CAP];
}saya;
typedef struct StackRecord Stack;

void initStack(Stack &s);
int isEmpty(Stack s);
int isFull(Stack s);
void push(Stack &s, Element val);
Element pop(Stack &s);
int top(Stack s);
void printStack(Stack s);

void main()
{
	cout << "hello...\n\n";
	Stack s;
	initStack(s);
	push(s, 5);
	push(s, 6);
	push(s, 7);
	push(s, 8);
	printStack(s);
   getch();
}

void initStack(Stack &s)
{
	s.tos = -1;
}

int isEmpty(Stack s)
{
	return s.tos == - 1;
}

int isFull(Stack s)
{
	return s.tos == MAX_CAP - 1;
}

void push(Stack &s, Element val)
{
	if (isFull(s))
		cout<<"stack overflow .....";
	else {
		s.tos++;
		s.stack_array[s.tos] = val;
	}
}

Element pop(Stack &s)
{
	Element temp;
	if (isEmpty(s))
		cout<<"stack overflow .....";
	else {
		temp = s.stack_array[s.tos];
		s.tos--;
		return temp;
	}
}

int top(Stack s)
{
	int tos;
	tos = s.tos;
	return tos;
}

void printStack(Stack s)
{
	while (top(s)!=-1)
	{
		Element val1 = pop(s);
		cout << val1 <<"\n";
	}
}
